fullname: Lib
description: 'Lib assistant will help you create a custom Python library.'

dependencies:
- use: super.dependencies
- if $venv:
  - rpm: ['python-virtualenv']
- else:
  - rpm: ['python-setuptools']

dependencies_eclipse:
- use: eclipse.dependencies_python

dependencies_vim:
- use: vim.dependencies

dependencies_rpm:
- use: tito.dependencies

args:
  name:
    use: common_args

  eclipse:
    use: eclipse

  github:
    use: common_args

  vim:
    use: vim

  venv:
    use: common_args

  rpm:
    use: common_args

files:
  gitignore: &gitignore
    source: ../.gitignore
  setuppy: &setuppy
    source: setup.py
  license: &license
    source: LICENSE
  manifestin: &mainfestin
    source: MANIFEST.in
  readmerst: &readmerst
    source: README.rst
  specfile: &specfile
    source: lib.spec

run:
- setup_project_dir:
    from: $name
    on_existing: fail
    create_topdir: normalized
    contdir_var: dirname
    topdir_normalized_var: basename
- log_i: 'Creating library project $basename in $dirname ...'
- cl: cd "$dirname"
- if $venv:
  - cl_i: virtualenv "$basename"
  - cl: cd "$basename"
- cl: mkdir -p "$basename/$basename" # create the dir holding the lib and inside it another dir for actual Python files
- cl: cd "$basename"
- dda_c: .
- cl: touch "$basename/__init__.py"
- cl: cp *license .
- cl: cp *manifestin .
- cl: cp *readmerst .
- cl: sed -i "s|NAME|$basename|" README.rst
- cl: cp *setuppy .
- cl: sed -i "s|NAME|$basename|" setup.py
- if defined $vim:
  - use: vim.run
- if $eclipse:
  - use: eclipse.run_python
- cl: cp *gitignore .
- use: git_init_add_commit.run
- if defined $github:
  - github: create_and_push
- if defined $rpm:
  - cl: cp *specfile ./$basename.spec
  - cl: sed -i "s|NAME|$basename|" ./$basename.spec
  - cl: git add ./$basename.spec
  - cl: git commit -m 'Adding initial spec file'
  - use: tito.run
- log_i: 'Library project $basename in $dirname has been created.'
- if $venv:
  - log_i: 'To switch to the created virtualenv, use "source ${dirname}/${basename}/bin/activate"'
